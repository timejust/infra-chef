# service-api.conf
#
# Generated by Chef for <%= node[:fqdn] %>
# Local modifications will be overwritten.
#

# Enumerate all the v1 upstream servers here
<%- @v1_services.each do |service, data| %>
upstream v1_<%= service %> {
  <%- data[:servers].each do |server| %>
  server <%= server.ipaddress %>:<%= data[:port] %> max_fails=1 fail_timeout=10s srun_id=<%= server[:hostname] %>;
  <%- end %>
  <%- if data[:upstream_directives] %>
  <%= data[:upstream_directives] %>
  <%- end %>
}
<%- end %>

server {  
  listen <%= @port%>;

  # Retrieve client's IP address in HTTP request, rather than load balancer.
  # See http://wiki.nginx.org/NginxHttpRealIpModule.
  set_real_ip_from        <%= @set_real_ip_from %>;
  real_ip_header          X-Forwarded-For;

  # Allow file uploads
  client_max_body_size 50M;

  ####### V1 Services ########
<%-@v1_services.each do |service, data| %>
  
  # proxy for upstream service -- <%= service  %>
  location ~* v1/(<%=data['endpoint'].join('|')%>) {
    <%- if data[:location_directives] %>
    <%= data[:location_directives] %> 
    <%- end %>
     proxy_pass_header        Server;
     proxy_set_header         Host $http_host;
     proxy_redirect           off;
     proxy_set_header         X-Real-IP $remote_addr;
     proxy_set_header         X-Scheme $scheme;
     proxy_next_upstream      error timeout invalid_header http_500 http_404 http_503 http_504 http_502;
     proxy_connect_timeout    15;
     proxy_pass               http://v1_<%= service  %>;
     
     <%- if data['remote_resource'] %>
     rewrite v1/<%=data['endpoint']%>/(.*)     /<%=data['remote_resource']%>/$1 break;
     <%- end %>
     
     <%- if data['longpoll'] %>
     # necessary for long polling applications
     proxy_buffering          off;
     proxy_read_timeout       180;
     <%- else %>
     proxy_buffering          on;
     <%- end %>
   }
<%- end%>

}
